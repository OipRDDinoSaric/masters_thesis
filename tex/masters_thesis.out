\BOOKMARK [0][-]{chapter.1}{Functional safety in embedded systems}{}% 1
\BOOKMARK [0][-]{chapter.2}{Cortex R additions over cortex M}{}% 2
\BOOKMARK [0][-]{chapter.3}{FreeRTOS kernel}{}% 3
\BOOKMARK [1][-]{section.3.1}{Introduction}{chapter.3}% 4
\BOOKMARK [1][-]{section.3.2}{Inner workings of the tasks}{chapter.3}% 5
\BOOKMARK [1][-]{section.3.3}{Inner workings of the scheduler}{chapter.3}% 6
\BOOKMARK [1][-]{section.3.4}{Inner workings of the timers}{chapter.3}% 7
\BOOKMARK [0][-]{chapter.4}{FreeRTOS functional safety additions}{}% 8
\BOOKMARK [1][-]{section.4.1}{Timed tasks addition}{chapter.4}% 9
\BOOKMARK [2][-]{subsection.4.1.1}{Introduction}{section.4.1}% 10
\BOOKMARK [2][-]{subsection.4.1.2}{Architecture}{section.4.1}% 11
\BOOKMARK [2][-]{subsection.4.1.3}{Limitiations}{section.4.1}% 12
\BOOKMARK [1][-]{section.4.2}{Replicated tasks}{chapter.4}% 13
\BOOKMARK [2][-]{subsection.4.2.1}{Introduction}{section.4.2}% 14
\BOOKMARK [2][-]{subsection.4.2.2}{Architecture}{section.4.2}% 15
\BOOKMARK [2][-]{subsection.4.2.3}{Limitiations}{section.4.2}% 16
\BOOKMARK [1][-]{section.4.3}{Command reference}{chapter.4}% 17
\BOOKMARK [2][-]{subsection.4.3.1}{xTaskCreateTimed - Creates a timed task.}{section.4.3}% 18
\BOOKMARK [2][-]{subsection.4.3.2}{vTaskTimedReset - Resets the timer of timed task.}{section.4.3}% 19
\BOOKMARK [2][-]{subsection.4.3.3}{xTimerGetTaskHandle - Gets the corresponding timed task handle from the timer handle.}{section.4.3}% 20
\BOOKMARK [2][-]{subsection.4.3.4}{xTaskCreateReplicated - Creates a replicated task.}{section.4.3}% 21
\BOOKMARK [2][-]{subsection.4.3.5}{xTaskSetCompareValue - Sets a compare value for the calling task.}{section.4.3}% 22
\BOOKMARK [2][-]{subsection.4.3.6}{vTaskSyncAndCompare - Syncronizes the replicated tasks and compares compare values.}{section.4.3}% 23
\BOOKMARK [2][-]{subsection.4.3.7}{eTaskGetType - Get the type of the task.}{section.4.3}% 24
\BOOKMARK [2][-]{subsection.4.3.8}{xTimerPause - Pauses the timer.}{section.4.3}% 25
\BOOKMARK [2][-]{subsection.4.3.9}{xTimerPauseFromISR - Pauses the timer from interrupt service routine.}{section.4.3}% 26
\BOOKMARK [2][-]{subsection.4.3.10}{xTimerResume - Resumes the timer.}{section.4.3}% 27
\BOOKMARK [2][-]{subsection.4.3.11}{xTimerResumeFromISR - Resumes the timer from interrupt service routine.}{section.4.3}% 28
\BOOKMARK [2][-]{subsection.4.3.12}{xTimerIsTimerActiveFromISR - Checks if timer is active from interrupt service routine.}{section.4.3}% 29
\BOOKMARK [0][-]{chapter.5}{Secure bootloader}{}% 30
\BOOKMARK [1][-]{section.5.1}{What is a bootloader?}{chapter.5}% 31
\BOOKMARK [1][-]{section.5.2}{Developed bootloader overview}{chapter.5}% 32
\BOOKMARK [1][-]{section.5.3}{The bootloader's architecture}{chapter.5}% 33
\BOOKMARK [1][-]{section.5.4}{Flash memory organization}{chapter.5}% 34
\BOOKMARK [1][-]{section.5.5}{Application boot record}{chapter.5}% 35
\BOOKMARK [1][-]{section.5.6}{User application modifications}{chapter.5}% 36
\BOOKMARK [1][-]{section.5.7}{Command reference}{chapter.5}% 37
\BOOKMARK [2][-]{subsection.5.7.1}{version - Gets a version of the bootloader.}{section.5.7}% 38
\BOOKMARK [2][-]{subsection.5.7.2}{help - Makes life easier.}{section.5.7}% 39
\BOOKMARK [2][-]{subsection.5.7.3}{reset - Resets the microcontroller.}{section.5.7}% 40
\BOOKMARK [2][-]{subsection.5.7.4}{cid - Gets chip identification number.}{section.5.7}% 41
\BOOKMARK [2][-]{subsection.5.7.5}{get-rdp-level - Gets read protection }{section.5.7}% 42
\BOOKMARK [2][-]{subsection.5.7.6}{jump-to - Jumps to a requested address.}{section.5.7}% 43
\BOOKMARK [2][-]{subsection.5.7.7}{flash-erase - Erases flash memory.}{section.5.7}% 44
\BOOKMARK [2][-]{subsection.5.7.8}{flash-write - Writes to flash memory.}{section.5.7}% 45
\BOOKMARK [2][-]{subsection.5.7.9}{mem-read - Read bytes from memory.}{section.5.7}% 46
\BOOKMARK [2][-]{subsection.5.7.10}{update-act - Updates active application from new application memory area.}{section.5.7}% 47
\BOOKMARK [2][-]{subsection.5.7.11}{update-new - Updates new application.}{section.5.7}% 48
\BOOKMARK [2][-]{subsection.5.7.12}{en-write-prot - Enables write protection per sector.}{section.5.7}% 49
\BOOKMARK [2][-]{subsection.5.7.13}{dis-write-prot - Disables write protection per sector.}{section.5.7}% 50
\BOOKMARK [2][-]{subsection.5.7.14}{get-write-prot - Returns bit array of sector write protection.}{section.5.7}% 51
\BOOKMARK [2][-]{subsection.5.7.15}{exit - Exits the bootloader and starts the user application.}{section.5.7}% 52
\BOOKMARK [0][-]{chapter.6}{Conclusion}{}% 53
\BOOKMARK [0][-]{chapter*.24}{Bibliography}{}% 54
